name: STSAggregation
config:
  topology.max.spout.pending: 1
  topology.workers: ${topology.workers}
  hbase.config:
    hbase.zookeeper.quorum: ${hbase.zookeeper.quorum}
    zookeeper.znode.parent: ${zookeeper.znode.parent}
  hdfs.config:
    dfs.client.failover.proxy.provider.${hdfs.nameservices}: org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider
    dfs.ha.namenodes.${hdfs.nameservices}: ${hdfs.namenodes}
    dfs.namenode.rpc-address.${hdfs.nameservices}.nn1: ${hdfs.nn1}
    dfs.namenode.rpc-address.${hdfs.nameservices}.nn2: ${hdfs.nn2}
    dfs.nameservices: ${hdfs.nameservices}
  kafka.broker.properties:
    metadata.broker.list: hw0002.dev1.awse1a.datasciences.tmcs:6667
    serializer.class: kafka.serializer.DefaultEncoder
    key.serializer.class: kafka.serializer.StringEncoder
components:
  - id: hdfsStateFactory
    className: com.tm.ds.woncup.flux.state.hdfs.WoncupHdfsFileStateFactory
    properties:
      - name: fsUrl
        value: ${hdfs.fsUrl}
      - name: path
        value: ${hdfs.path}
      - name: prefix
        value: ${hdfs.prefix}
      - name: extension
        value: ${hdfs.extension}
  - id: hbaseStateFactoryIncr
    className: com.tm.ds.woncup.host.state.aggregate.StsHBaseStateFactoryAgr
    properties:
      - name: hbaseTable
        value: ${hbase.table.total}
      - name: columnFamily
        value: ${hbase.columnFamily}
        value: ${hbase.columnFamily}
  - id: hbaseStateFactoryBf
    className: com.tm.ds.woncup.host.state.bloom.StsHBaseStateFactoryBf
    properties:
      - name: hbaseTable
        value: ${hbase.table.total}
      - name: columnFamily
        value: ${hbase.columnFamily}
        value: ${hbase.columnFamily}
  - id: hbaseStateUpdater
    className: com.tm.ds.woncup.host.state.PermeableHBaseUpdater
  - id: hdfsStateUpdater
    className: org.apache.storm.hdfs.trident.HdfsUpdater
  - id: parser
    className: com.tm.ds.woncup.host.schema.AggregateStsMessage$Parser
  - id: kafkaProvider
    className: com.tm.ds.woncup.flux.provider.kafka.KafkaProvider
    properties:
      - name: id
        value: stsAggregate
      - name: zookeeperConnect
        value: ${kafka.zookeeper}
      - name: topic
        value: ${kafka.topic}
      - name: forceFromStart
        value: ${kafka.forceFromStart}

topologySource:
  className: com.tm.ds.woncup.host.topology.StsAgrTopology
  properties:
    - name: parser
      ref: parser
    - name: rawMessageStateFactory
      ref: hdfsStateFactory
    - name: rawMessageStateUpdater
      ref: hdfsStateUpdater
    - name: hbaseStateFactoryIncr
      ref: hbaseStateFactoryIncr
    - name: hbaseStateFactoryBf
      ref: hbaseStateFactoryBf
    - name: hbaseStateUpdater
      ref: hbaseStateUpdater
    - name: targetTopic
      value: ${kafka.targetTopic}

  configMethods:
    - name: withProvider
      args: [ref: kafkaProvider]
